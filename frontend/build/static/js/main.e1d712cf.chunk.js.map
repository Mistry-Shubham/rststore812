{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducer.js","reducers/cartReducer.js","reducers/userReducer.js","reducers/orderReducer.js","actions/userActions.js","components/Header.js","components/Footer.js","actions/productActions.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_MY_LIST_REQUEST","ORDER_MY_LIST_SUCCESS","ORDER_MY_LIST_FAIL","ORDER_MY_LIST_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","cart","cartItems","item","existsItem","find","i","map","filter","shippingAddress","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderMyList","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","MenuItems","children","url","as","RouterLink","to","mt","base","md","fontSize","letterSpacing","color","fontWeight","textTransform","mr","display","_hover","Header","useDispatch","navigate","useNavigate","useState","show","setShow","useSelector","align","justify","wrap","py","px","bgColor","w","top","zIndex","pos","size","textDecor","sm","onClick","HiOutlineMenuAlt3","h","width","alignItems","HiShoppingBag","Button","rightIcon","textDecoration","opacity","name","removeItem","HiUser","isAdmin","ml","Link","IoChevronDown","Footer","justifyContent","listProducts","listProductDetails","console","log","Rating","value","text","IoStar","IoStarHalf","IoStarOutline","Product","_id","maxW","borderRadius","overflow","transition","shadow","src","image","alt","minH","objectFit","direction","mb","rating","numReviews","price","Message","status","Loader","thickness","speed","emptyColor","label","HomeScreen","useEffect","templateColumns","gap","ProductScreen","qty","setQty","setRating","comment","setComment","useParams","successProductReview","errorProductReview","alert","colorScheme","brand","my","description","countInStock","onChange","e","target","Array","keys","disabled","length","p","rounded","review","createdAt","substring","border","borderColor","onSubmit","productId","preventDefault","post","placeholder","addToCart","setItem","stringify","CartScreen","useSearchParams","searchParams","removeFromCartHandler","removeFromCart","gridTemplateColumns","borderBottom","height","IoTrashBinSharp","borderWidth","padding","reduce","acc","currVal","FormContainer","boxShadow","LoginScreen","redirect","email","setEmail","password","setPassword","login","isLoading","pt","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","variant","split","totalPrice","isPaid","paidAt","IoWarning","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","separator","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","isRequired","PaymentScreen","paymentMethodRadio","setPaymentMethodRadio","defaultValue","spacing","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","style","idx","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDelivery","successDelivery","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","IoCheckmarkCircleSharp","IoCloseCircleSharp","IoPencilSharp","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","checked","check","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","IoAdd","category","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setDescription","setCountInStock","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","OrderListScreen","App","path","element","render","querySelector"],"mappings":"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","file":"static/js/main.e1d712cf.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\n\nexport const ORDER_MY_LIST_REQUEST = 'ORDER_MY_LIST_REQUEST';\nexport const ORDER_MY_LIST_SUCCESS = 'ORDER_MY_LIST_SUCCESS';\nexport const ORDER_MY_LIST_FAIL = 'ORDER_MY_LIST_FAIL';\nexport const ORDER_MY_LIST_RESET = 'ORDER_MY_LIST_RESET';\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n} from './reducers/productReducer';\nimport { cartReducer } from './reducers/cartReducer';\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducer';\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderMyListReducer,\n  orderListReducer,\n  orderDeliverReducer,\n} from './reducers/orderReducer';\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  cart: cartReducer, // {cartItems: [], shippingAddress: {}, paymentMethod: {}}\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMyList: orderMyListReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middlewares = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nexport default store;\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n} from '../constants/productConstants';\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_LIST_SUCCESS:\n      return { loading: false, products: action.payload };\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload };\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { ...state, loading: true };\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} };\n    default:\n      return state;\n  }\n};\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants';\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existsItem = state.cartItems.find(\n        (i) => i.product === item.product\n      );\n\n      if (existsItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((i) =>\n            i.product === existsItem.product ? item : i\n          ),\n        };\n      } else {\n        return { ...state, cartItems: [...state.cartItems, item] };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((i) => i.product !== action.payload),\n      };\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from '../constants/userConstants';\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload };\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_DETAILS_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateProfileReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { ...state, loading: true };\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, user: action.payload, success: true };\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_UPDATE_PROFILE_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true };\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload };\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LIST_RESET:\n      return { users: [] };\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true };\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true, user: action.payload };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_UPDATE_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_MY_LIST_REQUEST,\n  ORDER_MY_LIST_SUCCESS,\n  ORDER_MY_LIST_FAIL,\n  ORDER_MY_LIST_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants';\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return { loading: true };\n    case ORDER_CREATE_SUCCESS:\n      return { loading: false, success: true, order: action.payload };\n    case ORDER_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case ORDER_DETAILS_SUCCESS:\n      return { loading: false, order: action.payload };\n    case ORDER_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return { ...state, loading: true };\n    case ORDER_PAY_SUCCESS:\n      return { loading: false, success: true };\n    case ORDER_PAY_FAIL:\n      return { loading: false, error: action.payload };\n    case ORDER_PAY_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderMyListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_MY_LIST_REQUEST:\n      return { loading: true };\n    case ORDER_MY_LIST_SUCCESS:\n      return { loading: false, orders: action.payload };\n    case ORDER_MY_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    case ORDER_MY_LIST_RESET:\n      return { orders: [] };\n    default:\n      return state;\n  }\n};\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return { loading: true };\n    case ORDER_LIST_SUCCESS:\n      return { loading: false, orders: action.payload };\n    case ORDER_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return { loading: true };\n    case ORDER_DELIVER_SUCCESS:\n      return { loading: false, success: true };\n    case ORDER_DELIVER_FAIL:\n      return { loading: false, error: action.payload };\n    case ORDER_DELIVER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_DETAILS_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from '../constants/userConstants';\nimport { ORDER_MY_LIST_RESET } from '../constants/orderConstants';\n\nexport const login = (email, password) => async (dispatch) => {\n  console.log(email, password);\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (err) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_MY_LIST_RESET });\n  dispatch({ type: USER_LIST_RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (err) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/`, config);\n\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({ type: USER_DELETE_SUCCESS });\n  } catch (err) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport {\n  Flex,\n  Heading,\n  Link,\n  Box,\n  Icon,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Button,\n} from '@chakra-ui/react';\nimport { HiShoppingBag, HiUser, HiOutlineMenuAlt3 } from 'react-icons/hi';\nimport { IoChevronDown } from 'react-icons/io5';\nimport { logout } from '../actions/userActions';\n\nconst MenuItems = ({ children, url }) => {\n  return (\n    <Link\n      as={RouterLink}\n      to={url}\n      mt={{ base: 4, md: 0 }}\n      fontSize='sm'\n      letterSpacing='wide'\n      color='whiteAlpha.600'\n      fontWeight='bold'\n      textTransform='uppercase'\n      mr='5'\n      display='block'\n      _hover={{ color: 'whiteAlpha.800' }}>\n      {children}\n    </Link>\n  );\n};\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n\n  const [show, setShow] = useState(false);\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n    navigate('/login');\n  };\n\n  return (\n    <Flex\n      as='header'\n      align='center'\n      justify='space-between'\n      wrap='wrap'\n      py='6'\n      px='6'\n      bgColor='gray.800'\n      w='100%'\n      top='0'\n      zIndex='2'\n      pos='fixed'>\n      <Flex align='center' mr='5'>\n        <Heading\n          as='h1'\n          color='whiteAlpha.800'\n          fontWeight='bold'\n          size='md'\n          letterSpacing='md'>\n          <Link\n            as={RouterLink}\n            to='/'\n            _hover={{ color: 'gray.500', textDecor: 'none' }}>\n            RST Store\n          </Link>\n        </Heading>\n      </Flex>\n\n      <Box\n        display={{ base: 'block', md: 'none', sm: 'block' }}\n        onClick={() => setShow(!show)}>\n        <Icon as={HiOutlineMenuAlt3} color='white' w='6' h='6' />\n        <title>Menu</title>\n      </Box>\n\n      <Box\n        display={{ base: show ? 'block' : 'none', md: 'flex' }}\n        width={{ base: 'full', md: 'auto' }}\n        alignItems='center'>\n        <MenuItems url='/cart'>\n          <Flex alignItems='center'>\n            <Icon as={HiShoppingBag} w='4' h='4' mr='1' />\n            Cart\n          </Flex>\n        </MenuItems>\n\n        {/* Login/Logout views */}\n        {userInfo ? (\n          <Menu>\n            <MenuButton\n              as={Button}\n              rightIcon={<IoChevronDown />}\n              _hover={{ textDecoration: 'none', opacity: '0.7' }}>\n              {userInfo.name}\n            </MenuButton>\n            <MenuList url='/login'>\n              <MenuItem as={RouterLink} to='/profile'>\n                Profile\n              </MenuItem>\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        ) : (\n          <MenuItems url='/login'>\n            <Flex alignItems='center'>\n              <Icon as={HiUser} w='4' h='4' mr='1' />\n              Login\n            </Flex>\n          </MenuItems>\n        )}\n\n        {/* Admin Menu */}\n        {userInfo && userInfo.isAdmin && (\n          <Menu>\n            <MenuButton\n              ml='5'\n              color='white'\n              fontSize='sm'\n              fontWeight='semibold'\n              as={Link}\n              textTransform='uppercase'\n              _hover={{ textDecoration: 'none', opacity: '0.7' }}>\n              Manage <Icon as={IoChevronDown} />\n            </MenuButton>\n            <MenuList>\n              <MenuItem as={RouterLink} to='/admin/userlist'>\n                All Users\n              </MenuItem>\n              <MenuItem as={RouterLink} to='/admin/productlist'>\n                All Products\n              </MenuItem>\n              <MenuItem as={RouterLink} to='/admin/orderlist'>\n                All Orders\n              </MenuItem>\n            </MenuList>\n          </Menu>\n        )}\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import { Flex, Text } from '@chakra-ui/react';\n\nconst Footer = () => {\n  return (\n    <Flex as='footer' justifyContent='center' py='5'>\n      <Text>Copyright 2021. RST Store. All Rights Reserved.</Text>\n    </Flex>\n  );\n};\n\nexport default Footer;\n","import axios from 'axios';\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n} from '../constants/productConstants';\n\nexport const listProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n\n    const { data } = await axios.get('/api/products');\n\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    console.log('I RAN!');\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/products/${id}`, config);\n\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\n  } catch (err) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/products`, {}, config);\n\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    );\n\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const createProductReview =\n  (productId, review) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      await axios.post(`/api/products/${productId}/reviews`, review, config);\n\n      dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\n    } catch (err) {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload:\n          err.response && err.response.data.message\n            ? err.response.data.message\n            : err.message,\n      });\n    }\n  };\n","import { Flex, Icon, Text, Box } from '@chakra-ui/react';\nimport { IoStar, IoStarOutline, IoStarHalf } from 'react-icons/io5';\n\nconst Rating = ({ value, text, color = 'red.500' }) => {\n  return (\n    <Flex alignItems='flex-start'>\n      <Box mr='2'>\n        <Icon\n          color={color}\n          as={value >= 1 ? IoStar : value >= 0.5 ? IoStarHalf : IoStarOutline}\n        />\n        <Icon\n          color={color}\n          as={value >= 2 ? IoStar : value >= 1.5 ? IoStarHalf : IoStarOutline}\n        />\n        <Icon\n          color={color}\n          as={value >= 3 ? IoStar : value >= 2.5 ? IoStarHalf : IoStarOutline}\n        />\n        <Icon\n          color={color}\n          as={value >= 4 ? IoStar : value >= 3.5 ? IoStarHalf : IoStarOutline}\n        />\n        <Icon\n          color={color}\n          as={value >= 5 ? IoStar : value >= 4.5 ? IoStarHalf : IoStarOutline}\n        />\n      </Box>\n      <Text>{text && text}</Text>\n    </Flex>\n  );\n};\n\nexport default Rating;\n","import { Link as RouterLink } from 'react-router-dom';\nimport { Box, Link, Image, Flex, Heading, Text } from '@chakra-ui/react';\nimport Rating from './Rating';\n\nconst Product = ({ product }) => {\n  return (\n    <Link\n      as={RouterLink}\n      to={`/product/${product._id}`}\n      _hover={{ textDecor: 'none' }}\n    >\n      <Box\n        maxW='sm'\n        borderRadius='lg'\n        overflow='hidden'\n        bgColor='white'\n        transition='all'\n        _hover={{ shadow: 'md' }}\n      >\n        <Image\n          src={product.image}\n          alt={product.name}\n          minH='360px'\n          objectFit='cover'\n        />\n        <Flex py='5' px='4' direction='column' justifyContent='space-between'>\n          <Heading as='h4' fontSize='lg' mb='3'>\n            {product.name}\n          </Heading>\n          <Flex alignItems='center' justifyContent='space-between'>\n            <Rating\n              value={product.rating}\n              text={`${product.numReviews} reviews`}\n              color='yellow.500'\n            />\n            <Text fontSize='2xl' fontWeight='bold' color='blue.600'>\n              ₹{product.price}\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    </Link>\n  );\n};\n\nexport default Product;\n","import { Alert, AlertIcon, AlertTitle } from '@chakra-ui/react';\n\nconst Message = ({ type = 'info', children }) => {\n  return (\n    <Alert status={type}>\n      <AlertIcon />\n      <AlertTitle>{children}</AlertTitle>\n    </Alert>\n  );\n};\n\nexport default Message;\n","import { Spinner, Flex } from '@chakra-ui/react';\n\nconst Loader = () => {\n  return (\n    <Flex alignItems='center' justifyContent='center'>\n      <Spinner\n        thickness='4px'\n        speed='0.65s'\n        emptyColor='gray.200'\n        color='blue.500'\n        size='xl'\n        label='Loading...'\n      />\n    </Flex>\n  );\n};\n\nexport default Loader;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Heading, Grid } from '@chakra-ui/react';\nimport { listProducts } from '../actions/productActions';\nimport Product from '../components/Product';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, products, error } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Heading as='h2' mb='8' fontSize='3xl'>\n        Latest Products\n      </Heading>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message type='error'>{error}</Message>\n      ) : (\n        <Grid templateColumns='repeat(4, 1fr)' gap='8'>\n          {products.map((product) => (\n            <Product key={product._id} product={product} />\n          ))}\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link as RouterLink, useParams, useNavigate } from 'react-router-dom';\nimport {\n  Flex,\n  Grid,\n  Image,\n  Heading,\n  Text,\n  Button,\n  Divider,\n  Select,\n  FormControl,\n  FormLabel,\n  Textarea,\n  Box,\n  Link,\n} from '@chakra-ui/react';\nimport Rating from '../components/Rating';\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\n\nconst ProductScreen = () => {\n  const [qty, setQty] = useState(1);\n\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  const { id } = useParams();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, product, error } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const { success: successProductReview, error: errorProductReview } =\n    productReviewCreate;\n\n  useEffect(() => {\n    if (successProductReview) {\n      alert('Review submitted');\n      setRating(0);\n      setComment('');\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n\n    dispatch(listProductDetails(id));\n  }, [dispatch, id, successProductReview]);\n\n  const addToCartHandler = () => {\n    navigate(`/cart/${id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createProductReview(id, { rating, comment }));\n  };\n\n  return (\n    <>\n      <Flex mb='5'>\n        <Button as={RouterLink} to='/' colorScheme='gray'>\n          Go Back\n        </Button>\n      </Flex>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message type='error'>{error}</Message>\n      ) : (\n        <>\n          <Grid templateColumns='5fr 4fr 3fr' gap='10'>\n            {/* Column 1 */}\n            <Image src={product.image} alt={product.name} borderRadius='md' />\n\n            {/* Column 2 */}\n            <Flex direction='column'>\n              <Heading as='h6' fontSize='base' color='gray.500'>\n                {product.brand}\n              </Heading>\n              <Heading as='h2' fontSize='4xl' mb='2'>\n                {product.name}\n              </Heading>\n              <Rating\n                value={product.rating}\n                text={`${product.numReviews} reviews`}\n              />\n              <Heading\n                as='h5'\n                my='5'\n                fontSize='4xl'\n                fontWeight='bold'\n                color='teal.600'>\n                ₹{product.price}\n              </Heading>\n              <Text>{product.description}</Text>\n            </Flex>\n\n            {/* Column 3 */}\n            <Flex direction='column'>\n              <Flex justifyContent='space-between' py='2'>\n                <Text>Price:</Text>\n                <Text fontWeight='bold'>₹{product.price}</Text>\n              </Flex>\n\n              <Flex justifyContent='space-between' py='2'>\n                <Text>Status:</Text>\n                <Text fontWeight='bold'>\n                  {product.countInStock > 0 ? 'In Stock' : 'Not Available'}\n                </Text>\n              </Flex>\n\n              <Divider />\n\n              {product.countInStock > 0 && (\n                <Flex justifyContent='space-between' py='2'>\n                  <Text>Qty:</Text>\n                  <Select\n                    value={qty}\n                    onChange={(e) => setQty(e.target.value)}\n                    width='30%'>\n                    {[...Array(product.countInStock).keys()].map((i) => (\n                      <option key={i + 1} value={i + 1}>\n                        {i + 1}\n                      </option>\n                    ))}\n                  </Select>\n                </Flex>\n              )}\n\n              <Button\n                bgColor='gray.800'\n                textTransform='uppercase'\n                letterSpacing='wide'\n                colorScheme='teal'\n                my='2'\n                disabled={product.countInStock === 0}\n                onClick={addToCartHandler}>\n                Add to Cart\n              </Button>\n            </Flex>\n          </Grid>\n\n          {/* Review form */}\n          <Box mt='10'>\n            <Box>\n              <Heading as='h2' size='xl' mb='4'>\n                Reviews\n              </Heading>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n\n              <Box p='4' bgColor='white' rounded='md' mb='1'>\n                {product.reviews.map((review) => (\n                  <Flex direction='column' key={review._id} mb='5'>\n                    <Flex justifyContent='space-between'>\n                      <Text fontSize='lg'>\n                        <strong>{review.name}</strong> on{' '}\n                        {review.createdAt.substring(0, 10)}\n                      </Text>\n                      <Rating value={review.rating} />\n                    </Flex>\n                    <Text mt='2'>{review.comment}</Text>\n                  </Flex>\n                ))}\n              </Box>\n\n              {/* FORM */}\n              <Box\n                p='10'\n                bgColor='white'\n                rounded='md'\n                mt='10'\n                border='2px'\n                borderColor='gray.300'>\n                <Heading as='h3' size='lg' mb='6'>\n                  Write a review\n                </Heading>\n\n                {errorProductReview && (\n                  <Message type='error'>{errorProductReview}</Message>\n                )}\n\n                {userInfo ? (\n                  <form onSubmit={submitHandler}>\n                    <FormControl id='rating' mb='3'>\n                      <FormLabel>Rating</FormLabel>\n                      <Select\n                        placeholder='Select option'\n                        value={rating}\n                        onChange={(e) => setRating(e.target.value)}>\n                        <option>Select...</option>\n                        <option value='1'>1 - Poor</option>\n                        <option value='2'>2 - Okay</option>\n                        <option value='3'>3 - Good</option>\n                        <option value='4'>4 - Very Good</option>\n                        <option value='5'>5 - Execellent</option>\n                      </Select>\n                    </FormControl>\n\n                    <FormControl id='comment' mb='3'>\n                      <FormLabel>Comment</FormLabel>\n                      <Textarea\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}></Textarea>\n                    </FormControl>\n\n                    <Button colorScheme='teal' type='submit'>\n                      Post Review\n                    </Button>\n                  </form>\n                ) : (\n                  <Message>\n                    Please{' '}\n                    <Link as={RouterLink} to='/login'>\n                      login\n                    </Link>{' '}\n                    to write a review\n                  </Message>\n                )}\n              </Box>\n            </Box>\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","import axios from 'axios';\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants';\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({ type: CART_REMOVE_ITEM, payload: id });\n\n  localStorage.removeItem('cartItems', JSON.stringify(getState().cartItems));\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data });\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data });\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\n","import { useEffect } from 'react';\nimport {\n  Link as RouterLink,\n  useParams,\n  useSearchParams,\n  useNavigate,\n} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Flex,\n  Text,\n  Grid,\n  Heading,\n  Box,\n  Image,\n  Link,\n  Select,\n  Button,\n  Icon,\n} from '@chakra-ui/react';\nimport { IoTrashBinSharp } from 'react-icons/io5';\n\nimport Message from '../components/Message';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\n\nconst CartScreen = () => {\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  let [searchParams] = useSearchParams();\n\n  const { id: productId } = useParams();\n  let qty = searchParams.get('qty');\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    navigate('/login?redirect=shipping');\n  };\n\n  return (\n    <Grid gridTemplateColumns='3'>\n      <Box>\n        <Heading mb='8'>Shopping Cart</Heading>\n        <Flex>\n          {cartItems.length === 0 ? (\n            <Message>\n              You cart is empty.{' '}\n              <Link as={RouterLink} to='/'>\n                Go Back\n              </Link>\n            </Message>\n          ) : (\n            <Grid templateColumns='4fr 2fr' gap='10' w='full'>\n              <Flex direction='column'>\n                {cartItems.map((item) => (\n                  <Grid\n                    key={item.product}\n                    size='100%'\n                    alignItems='center'\n                    justifyContent='space-between'\n                    borderBottom='1px'\n                    borderColor='gray.200'\n                    py='4'\n                    px='2'\n                    rounded='lg'\n                    templateColumns='1fr 4fr 2fr 2fr 1fr'\n                    _hover={{ bgColor: 'gray.50' }}\n                  >\n                    {/* Product Image */}\n                    <Image\n                      src={item.image}\n                      alt={item.name}\n                      borderRadius='lg'\n                      height='14'\n                      width='14'\n                      objectFit='cover'\n                    />\n\n                    {/* Product Name */}\n                    <Text fontWeight='semibold' fontSize='lg'>\n                      <Link as={RouterLink} to={`/products/${item.product}`}>\n                        {item.name}\n                      </Link>\n                    </Text>\n\n                    {/* Product Price */}\n                    <Text fontWeight='bold' fontSize='lg'>\n                      ₹{item.price}\n                    </Text>\n\n                    {/* Quantity Select Box */}\n                    <Select\n                      value={item.qty}\n                      width='20'\n                      onChange={(e) =>\n                        dispatch(addToCart(item.product, +e.target.value))\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((i) => (\n                        <option key={i + 1} value={i + 1}>\n                          {i + 1}\n                        </option>\n                      ))}\n                    </Select>\n\n                    {/* Delete Button */}\n                    <Button\n                      type='button'\n                      colorScheme='red'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <Icon as={IoTrashBinSharp} />\n                    </Button>\n                  </Grid>\n                ))}\n              </Flex>\n\n              <Flex\n                direction='column'\n                border='1px'\n                borderWidth='2'\n                borderColor='gray.200'\n                rounded='md'\n                padding='5'\n                height='48'\n                justifyContent='space-between'\n              >\n                <Flex direction='column'>\n                  <Heading as='h2' fontSize='2xl' mb='2'>\n                    Subtotal (\n                    {cartItems.reduce(\n                      (acc, currVal) => acc + (+currVal.qty || 1),\n                      0\n                    )}\n                    ) items\n                  </Heading>\n                  <Text\n                    fontWeight='bold'\n                    fontSize='2xl'\n                    color='blue.600'\n                    mb='4'\n                  >\n                    ₹\n                    {cartItems.reduce(\n                      (acc, currVal) =>\n                        acc + (currVal.qty || 1) * currVal.price,\n                      0\n                    )}\n                  </Text>\n                  <Button\n                    type='button'\n                    disabled={cartItems.length === 0}\n                    size='lg'\n                    colorScheme='teal'\n                    bgColor='gray.800'\n                    onClick={checkoutHandler}\n                  >\n                    Proceed to Checkout\n                  </Button>\n                </Flex>\n              </Flex>\n            </Grid>\n          )}\n        </Flex>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default CartScreen;\n","import { Flex } from '@chakra-ui/react';\n\nconst FormContainer = ({ children, width = 'xl' }) => {\n  return (\n    <Flex\n      direction='column'\n      boxShadow='md'\n      rounded='md'\n      bgColor='white'\n      p='10'\n      width={width}\n    >\n      {children}\n    </Flex>\n  );\n};\n\nexport default FormContainer;\n","import { useState, useEffect } from 'react';\nimport {\n  Link as RouterLink,\n  useSearchParams,\n  useNavigate,\n} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Flex,\n  Heading,\n  Text,\n  FormControl,\n  FormLabel,\n  Input,\n  Link,\n  Spacer,\n} from '@chakra-ui/react';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { login } from '../actions/userActions';\n\nconst LoginScreen = () => {\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n\n  let [searchParams] = useSearchParams();\n  let redirect = searchParams.get('redirect') || '/';\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect.length > 1 ? `/${redirect}` : `${redirect}`);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <Flex w='full' alignItems='center' justifyContent='center' py='5'>\n      <FormContainer>\n        <Heading as='h1' mb='8' fontSize='3xl'>\n          Login\n        </Heading>\n\n        {error && <Message type='error'>{error}</Message>}\n\n        <form onSubmit={submitHandler}>\n          <FormControl id='email'>\n            <FormLabel>Email Address</FormLabel>\n            <Input\n              type='email'\n              placeholder='usernam@domain.com'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </FormControl>\n\n          <Spacer h='3' />\n\n          <FormControl id='password'>\n            <FormLabel>Password</FormLabel>\n            <Input\n              type='password'\n              placeholder='**********'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n\n            <Button type='submit' isLoading={loading} mt='4' colorScheme='teal'>\n              Login\n            </Button>\n          </FormControl>\n        </form>\n\n        <Flex pt='5'>\n          <Text fontWeight='semibold'>\n            New Customer?{' '}\n            <Link\n              as={RouterLink}\n              to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n              Register\n            </Link>\n          </Text>\n        </Flex>\n      </FormContainer>\n    </Flex>\n  );\n};\n\nexport default LoginScreen;\n","import { useState, useEffect } from 'react';\nimport {\n  Link as RouterLink,\n  useSearchParams,\n  useNavigate,\n} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Flex,\n  Heading,\n  Text,\n  FormControl,\n  FormLabel,\n  Input,\n  Link,\n  Spacer,\n} from '@chakra-ui/react';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { register } from '../actions/userActions';\n\nconst RegisterScreen = () => {\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n\n  let [searchParams] = useSearchParams();\n  let redirect = searchParams.get('redirect') || '/';\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <Flex w='full' alignItems='center' justifyContent='center' py='5'>\n      <FormContainer>\n        <Heading as='h1' mb='8' fontSize='3xl'>\n          Register\n        </Heading>\n\n        {error && <Message type='error'>{error}</Message>}\n        {message && <Message type='error'>{message}</Message>}\n\n        <form onSubmit={submitHandler}>\n          <FormControl id='name'>\n            <FormLabel>Name</FormLabel>\n            <Input\n              type='text'\n              placeholder='Your full name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </FormControl>\n\n          <Spacer h='3' />\n\n          <FormControl id='email'>\n            <FormLabel>Email Address</FormLabel>\n            <Input\n              type='email'\n              placeholder='usernam@domain.com'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </FormControl>\n\n          <Spacer h='3' />\n\n          <FormControl id='password'>\n            <FormLabel>Password</FormLabel>\n            <Input\n              type='password'\n              placeholder='**********'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </FormControl>\n\n          <Spacer h='3' />\n\n          <FormControl id='confirmPassword'>\n            <FormLabel>Confirm Password</FormLabel>\n            <Input\n              type='password'\n              placeholder='Type password again'\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </FormControl>\n\n          <Button type='submit' isLoading={loading} mt='4' colorScheme='teal'>\n            Register\n          </Button>\n        </form>\n\n        <Flex pt='5'>\n          <Text fontWeight='semibold'>\n            Have an account?{' '}\n            <Link\n              as={RouterLink}\n              to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n              Login\n            </Link>\n          </Text>\n        </Flex>\n      </FormContainer>\n    </Flex>\n  );\n};\n\nexport default RegisterScreen;\n","import { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Flex,\n  Heading,\n  Text,\n  FormControl,\n  FormLabel,\n  Input,\n  Link,\n  Spacer,\n  Grid,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Icon,\n} from '@chakra-ui/react';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { IoWarning } from 'react-icons/io5';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { listMyOrders } from '../actions/orderActions';\n\nconst ProfileScreen = () => {\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const orderMyList = useSelector((state) => state.orderMyList);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderMyList;\n\n  useEffect(() => {\n    if (!userInfo) {\n      navigate('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [navigate, userInfo, user, dispatch]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      // DISPATCH UPDATE PROFILE\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <Grid templateColumns={{ sm: '1fr', md: '1fr 1fr' }} py='5' gap='10'>\n      <Flex w='full' alignItems='center' justifyContent='center' py='5'>\n        <FormContainer>\n          <Heading as='h1' mb='8' fontSize='3xl'>\n            User Profile\n          </Heading>\n\n          {error && <Message type='error'>{error}</Message>}\n          {message && <Message type='error'>{message}</Message>}\n          {success && <Message type='success'>Profile updated!</Message>}\n\n          <form onSubmit={submitHandler}>\n            <FormControl id='name'>\n              <FormLabel>Name</FormLabel>\n              <Input\n                type='text'\n                placeholder='Enter full name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </FormControl>\n\n            <Spacer h='3' />\n\n            <FormControl id='email'>\n              <FormLabel>Email</FormLabel>\n              <Input\n                type='email'\n                placeholder='Enter email address'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </FormControl>\n\n            <Spacer h='3' />\n\n            <FormControl id='password'>\n              <FormLabel>Password</FormLabel>\n              <Input\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </FormControl>\n\n            <Spacer h='3' />\n\n            <FormControl id='confirmPassword'>\n              <FormLabel>Confirm Password</FormLabel>\n              <Input\n                type='password'\n                placeholder='Enter password again'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              />\n            </FormControl>\n\n            <Button type='submit' isLoading={loading} mt='4' colorScheme='teal'>\n              Update\n            </Button>\n          </form>\n        </FormContainer>\n      </Flex>\n\n      <Flex direction='column'>\n        <Heading as='h2' mb='4'>\n          My Orders\n        </Heading>\n\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message type='error'>{errorOrders}</Message>\n        ) : (\n          <Table variant='striped'>\n            <Thead>\n              <Tr>\n                <Th>ID</Th>\n                <Th>DATE</Th>\n                <Th>TOTAL</Th>\n                <Th>PAID</Th>\n                <Th>DELIVERED</Th>\n                <Th></Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {orders.map((order) => (\n                <Tr key={order._id}>\n                  <Td>{order._id}</Td>\n                  <Td>{order.createdAt.split('T')[0]}</Td>\n                  <Td>{order.totalPrice}</Td>\n                  <Td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <Icon as={IoWarning} color='red' />\n                    )}\n                  </Td>\n                  <Td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <Icon as={IoWarning} color='red' />\n                    )}\n                  </Td>\n                  <Td>\n                    <Button\n                      as={RouterLink}\n                      to={`/order/${order._id}`}\n                      colorScheme='teal'\n                      size='sm'>\n                      Details\n                    </Button>\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </Table>\n        )}\n      </Flex>\n    </Grid>\n  );\n};\n\nexport default ProfileScreen;\n","import axios from 'axios';\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_MY_LIST_REQUEST,\n  ORDER_MY_LIST_SUCCESS,\n  ORDER_MY_LIST_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n} from '../constants/orderConstants';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_CREATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post('/api/orders', order, config);\n\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const payOrder =\n  (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_PAY_REQUEST });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/orders/${orderId}/pay`,\n        paymentResult,\n        config\n      );\n\n      dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n    } catch (err) {\n      dispatch({\n        type: ORDER_PAY_FAIL,\n        payload:\n          err.response && err.response.data.message\n            ? err.response.data.message\n            : err.message,\n      });\n    }\n  };\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_MY_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    dispatch({ type: ORDER_MY_LIST_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({\n      type: ORDER_MY_LIST_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get('/api/orders', config);\n\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DELIVER_REQUEST });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    );\n\n    dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        err.response && err.response.data.message\n          ? err.response.data.message\n          : err.message,\n    });\n  }\n};\n","import { Link as RouterLink } from 'react-router-dom';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Flex,\n} from '@chakra-ui/react';\nimport { IoCaretForwardSharp } from 'react-icons/io5';\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Flex justifyContent='center' mb='8'>\n      <Breadcrumb separator={<IoCaretForwardSharp color='gray.500' />}>\n        {/* Step 1 */}\n        <BreadcrumbItem>\n          {step1 ? (\n            <BreadcrumbLink>Login</BreadcrumbLink>\n          ) : (\n            <BreadcrumbLink\n              disabled\n              color='gray.400'\n              _hover={{ textDecor: 'none' }}\n            >\n              Login\n            </BreadcrumbLink>\n          )}\n        </BreadcrumbItem>\n\n        {/* Step 2 */}\n        <BreadcrumbItem>\n          {step2 ? (\n            <BreadcrumbLink as={RouterLink} to='/shipping'>\n              Shipping\n            </BreadcrumbLink>\n          ) : (\n            <BreadcrumbLink\n              disabled\n              color='gray.400'\n              _hover={{ textDecor: 'none' }}\n            >\n              Shipping\n            </BreadcrumbLink>\n          )}\n        </BreadcrumbItem>\n\n        {/* Step 3 */}\n        <BreadcrumbItem>\n          {step3 ? (\n            <BreadcrumbLink as={RouterLink} to='/payment'>\n              Payment\n            </BreadcrumbLink>\n          ) : (\n            <BreadcrumbLink\n              disabled\n              color='gray.400'\n              _hover={{ textDecor: 'none' }}\n            >\n              Payment\n            </BreadcrumbLink>\n          )}\n        </BreadcrumbItem>\n\n        {/* Step 4 */}\n        <BreadcrumbItem>\n          {step4 ? (\n            <BreadcrumbLink as={RouterLink} to='/placeorder'>\n              Place Order\n            </BreadcrumbLink>\n          ) : (\n            <BreadcrumbLink\n              disabled\n              color='gray.400'\n              _hover={{ textDecor: 'none' }}\n            >\n              Place Order\n            </BreadcrumbLink>\n          )}\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </Flex>\n  );\n};\n\nexport default CheckoutSteps;\n","import { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport {\n  Button,\n  Flex,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Spacer,\n} from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nconst ShippingScreen = () => {\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address || '');\n  const [city, setCity] = useState(shippingAddress.city || '');\n  const [postalCode, setPostalCode] = useState(\n    shippingAddress.postalCode || ''\n  );\n  const [country, setCountry] = useState(shippingAddress.country || '');\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    navigate('/payment');\n  };\n\n  return (\n    <Flex w='full' alignItems='center' justifyContent='center' py='5'>\n      <FormContainer>\n        <CheckoutSteps step1 step2 />\n\n        <Heading as='h1' mb='8' fontSize='3xl'>\n          Shipping\n        </Heading>\n\n        <form onSubmit={submitHandler}>\n          {/* Address */}\n          <FormControl id='address' isRequired>\n            <FormLabel>Address</FormLabel>\n            <Input\n              type='text'\n              placeholder='Enter Address'\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n            />\n          </FormControl>\n\n          <Spacer h='3' />\n\n          {/* City */}\n          <FormControl id='city' isRequired>\n            <FormLabel>City</FormLabel>\n            <Input\n              type='text'\n              placeholder='Enter City'\n              value={city}\n              onChange={(e) => setCity(e.target.value)}\n            />\n          </FormControl>\n\n          <Spacer h='3' />\n\n          {/* Postal Code */}\n          <FormControl id='postalCode' isRequired>\n            <FormLabel>Postal Code</FormLabel>\n            <Input\n              type='number'\n              placeholder='Enter Postal Code'\n              value={postalCode}\n              onChange={(e) => setPostalCode(e.target.value)}\n            />\n          </FormControl>\n\n          <Spacer h='3' />\n\n          {/* Country */}\n          <FormControl id='country' isRequired>\n            <FormLabel>Country</FormLabel>\n            <Input\n              type='text'\n              placeholder='Enter Your Country'\n              value={country}\n              onChange={(e) => setCountry(e.target.value)}\n            />\n          </FormControl>\n\n          <Button type='submit' mt='4' colorScheme='teal'>\n            Continue\n          </Button>\n        </form>\n      </FormContainer>\n    </Flex>\n  );\n};\n\nexport default ShippingScreen;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Button,\n  Flex,\n  Heading,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  Radio,\n  HStack,\n} from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod } from '../actions/cartActions';\n\nconst PaymentScreen = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress, paymentMethod } = cart;\n\n  const [paymentMethodRadio, setPaymentMethodRadio] = useState(\n    paymentMethod || 'paypal'\n  );\n\n  if (!shippingAddress) {\n    navigate('/shipping');\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethodRadio));\n    navigate('/placeorder');\n  };\n\n  return (\n    <Flex w='full' alignItems='center' justifyContent='center' py='5'>\n      <FormContainer>\n        <CheckoutSteps step1 step2 step3 />\n\n        <Heading as='h1' mb='8' fontSize='3xl'>\n          Payment Method\n        </Heading>\n\n        <form onSubmit={submitHandler}>\n          <FormControl as='fieldset'>\n            <FormLabel as='legend'>Select Method</FormLabel>\n            <RadioGroup defaultValue={paymentMethodRadio}>\n              <HStack spacing='24px'>\n                <Radio\n                  value='paypal'\n                  onChange={(e) => setPaymentMethodRadio(e.target.value)}\n                >\n                  Payment or Credit/Debit card\n                </Radio>\n              </HStack>\n            </RadioGroup>\n          </FormControl>\n\n          <Button type='submit' mt='4' colorScheme='teal'>\n            Continue\n          </Button>\n        </form>\n      </FormContainer>\n    </Flex>\n  );\n};\n\nexport default PaymentScreen;\n","import { useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport {\n  Button,\n  Flex,\n  Heading,\n  Box,\n  Grid,\n  Text,\n  Image,\n  Link,\n} from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\n\nconst PlaceOrderScreen = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const cart = useSelector((state) => state.cart);\n\n  cart.itemsPrice = cart.cartItems.reduce(\n    (acc, currVal) => acc + currVal.price * currVal.qty,\n    0\n  );\n  cart.shippingPrice = cart.itemsPrice < 1000 ? 1000 : 0;\n  cart.taxPrice = (18 * cart.itemsPrice) / 100;\n  cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  console.log(cart.shippingAddress);\n  console.log(cart.orderItems);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (success) {\n      navigate(`/order/${order._id}`);\n    }\n  }, [success]);\n\n  return (\n    <Flex w='full' py='5' direction='column'>\n      <CheckoutSteps step1 step2 step3 step4 />\n\n      <Grid templateColumns='3fr 2fr' gap='20'>\n        {/* Column 1 */}\n        <Flex direction='column'>\n          <Box borderBottom='1px' py='6' borderColor='gray.300'>\n            <Heading as='h2' fontSize='2xl' fontWeight='semibold' mb='3'>\n              Shipping\n            </Heading>\n            <Text>\n              <strong>Address: </strong>\n              {cart.shippingAddress.address}, {cart.shippingAddress.city},{' '}\n              {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\n            </Text>\n          </Box>\n\n          <Box borderBottom='1px' py='6' borderColor='gray.300'>\n            <Heading as='h2' fontSize='2xl' fontWeight='semibold' mb='3'>\n              Payment Method\n            </Heading>\n            <Text>\n              <strong>Method: </strong>{' '}\n              <span style={{ textTransform: 'capitalize' }}>\n                {cart.paymentMethod}\n              </span>\n            </Text>\n          </Box>\n\n          <Box borderBottom='1px' py='6' borderColor='gray.300'>\n            <Heading as='h2' fontSize='2xl' fontWeight='semibold' mb='3'>\n              Order Items\n            </Heading>\n            <Box>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <Box py='2'>\n                  {cart.cartItems.map((item, idx) => (\n                    <Flex\n                      key={idx}\n                      alignItems='center'\n                      justifyContent='space-between'>\n                      <Flex py='2' alignItems='center'>\n                        <Image\n                          src={item.image}\n                          alt={item.name}\n                          w='12'\n                          h='12'\n                          objectFit='cover'\n                          mr='6'\n                        />\n                        <Link\n                          as={RouterLink}\n                          to={`/products/${item.product}`}\n                          fontWeight='medium'\n                          fontSize='xl'>\n                          {item.name}\n                        </Link>\n                      </Flex>\n                      <Text fontSize='lg' fontWeight='semibold'>\n                        {item.qty || 1} x ₹{item.price} = ₹\n                        {(item.qty || 1) * item.price}\n                      </Text>\n                    </Flex>\n                  ))}\n                </Box>\n              )}\n            </Box>\n          </Box>\n        </Flex>\n\n        {/* Column 2 */}\n        <Flex\n          direction='column'\n          bgColor='white'\n          justifyContent='space-between'\n          py='8'\n          px='8'\n          shadow='md'\n          rounded='lg'\n          borderColor='gray.300'>\n          <Box>\n            <Heading mb='6' as='h2' fontSize='3xl' fontWeight='bold'>\n              Order Summary\n            </Heading>\n\n            {/* Items price */}\n            <Flex\n              borderBottom='1px'\n              py='2'\n              borderColor='gray.200'\n              alignItems='center'\n              justifyContent='space-between'>\n              <Text fontSize='xl'>Items</Text>\n              <Text fontWeight='bold' fontSize='xl'>\n                ₹{cart.itemsPrice}\n              </Text>\n            </Flex>\n\n            {/* Shipping price */}\n            <Flex\n              borderBottom='1px'\n              py='2'\n              borderColor='gray.200'\n              alignItems='center'\n              justifyContent='space-between'>\n              <Text fontSize='xl'>Shipping</Text>\n              <Text fontWeight='bold' fontSize='xl'>\n                ₹{cart.shippingPrice}\n              </Text>\n            </Flex>\n\n            {/* Tax price */}\n            <Flex\n              borderBottom='1px'\n              py='2'\n              borderColor='gray.200'\n              alignItems='center'\n              justifyContent='space-between'>\n              <Text fontSize='xl'>Tax</Text>\n              <Text fontWeight='bold' fontSize='xl'>\n                ₹{cart.taxPrice}\n              </Text>\n            </Flex>\n\n            {/* Total price */}\n            <Flex py='2' alignItems='center' justifyContent='space-between'>\n              <Text fontSize='xl'>Total</Text>\n              <Text fontWeight='bold' fontSize='xl' color='green.400'>\n                ₹{cart.totalPrice}\n              </Text>\n            </Flex>\n          </Box>\n\n          {error && <Message type='error'>{error}</Message>}\n\n          <Button\n            size='lg'\n            textTransform='uppercase'\n            colorScheme='yellow'\n            type='button'\n            disabled={cart.cartItems === 0}\n            onClick={placeOrderHandler}>\n            Place Order\n          </Button>\n        </Flex>\n      </Grid>\n    </Flex>\n  );\n};\n\nexport default PlaceOrderScreen;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link as RouterLink, useParams, useNavigate } from 'react-router-dom';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport {\n  Button,\n  Flex,\n  Heading,\n  Box,\n  Grid,\n  Text,\n  Image,\n  Link,\n} from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../actions/orderActions';\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants';\n\nconst OrderScreen = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { id: orderId } = useParams();\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDelivery, success: successDelivery } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  if (!loading) {\n    order.itemsPrice = order.orderItems.reduce(\n      (acc, currVal) => acc + currVal.price * (currVal.qty || 1),\n      0\n    );\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      navigate('/login');\n    }\n\n    const addPaypalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay || successDelivery) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPaypalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, successPay, order, successDelivery, navigate]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => dispatch(deliverOrder(order));\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message type='error'>{error}</Message>\n  ) : (\n    <>\n      <Flex w='full' py='5' direction='column'>\n        <Grid templateColumns='3fr 2fr' gap='20'>\n          {/* Column 1 */}\n          <Flex direction='column'>\n            <Box borderBottom='1px' py='6' borderColor='gray.300'>\n              {/* Shipping Information */}\n              <Heading as='h2' fontSize='2xl' fontWeight='semibold' mb='3'>\n                Shipping\n              </Heading>\n              <Text>\n                Name: <strong>{order.user.name}</strong>\n              </Text>\n              <Text>\n                Email:{' '}\n                <strong>\n                  <a\n                    style={{ textDecoration: 'underline' }}\n                    href={`mailto:${order.user.email}`}>\n                    {order.user.email}\n                  </a>\n                </strong>\n              </Text>\n              <Text>\n                <strong>Address: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city},{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </Text>\n              <Text mt='4'>\n                {order.isDelivered ? (\n                  <Message type='success'>\n                    Delivered on {order.deliveredAt}\n                  </Message>\n                ) : (\n                  <Message type='error'>Not Delivered</Message>\n                )}\n              </Text>\n            </Box>\n\n            {/* Payment Method */}\n            <Box borderBottom='1px' py='6' borderColor='gray.300'>\n              <Heading as='h2' fontSize='2xl' fontWeight='semibold' mb='3'>\n                Payment Method\n              </Heading>\n              <Text mb='4'>\n                <strong>Method: </strong>{' '}\n                <span style={{ textTransform: 'capitalize' }}>\n                  {order.paymentMethod}\n                </span>\n              </Text>\n              {order.isPaid ? (\n                <Message type='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message type='error'>Not Paid</Message>\n              )}\n            </Box>\n\n            {/* Order Items */}\n            <Box borderBottom='1px' py='6' borderColor='gray.300'>\n              <Heading as='h2' fontSize='2xl' fontWeight='semibold' mb='3'>\n                Order Items\n              </Heading>\n              <Box>\n                {order.orderItems.length === 0 ? (\n                  <Message>Order is empty</Message>\n                ) : (\n                  <Box py='2'>\n                    {order.orderItems.map((item, idx) => (\n                      <Flex\n                        key={idx}\n                        alignItems='center'\n                        justifyContent='space-between'>\n                        <Flex py='2' alignItems='center'>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            w='12'\n                            h='12'\n                            objectFit='cover'\n                            mr='6'\n                          />\n                          <Link\n                            as={RouterLink}\n                            to={`/products/${item.product}`}\n                            fontWeight='medium'\n                            fontSize='xl'>\n                            {item.name}\n                          </Link>\n                        </Flex>\n                        <Text fontSize='lg' fontWeight='semibold'>\n                          {item.qty || 1} x ₹{item.price} = ₹\n                          {(item.qty || 1) * item.price}\n                        </Text>\n                      </Flex>\n                    ))}\n                  </Box>\n                )}\n              </Box>\n            </Box>\n          </Flex>\n\n          {/* Column 2 */}\n          <Flex\n            direction='column'\n            bgColor='white'\n            justifyContent='space-between'\n            py='8'\n            px='8'\n            shadow='md'\n            rounded='lg'\n            borderColor='gray.300'>\n            <Box>\n              <Heading mb='6' as='h2' fontSize='3xl' fontWeight='bold'>\n                Order Summary\n              </Heading>\n\n              {/* Items price */}\n              <Flex\n                borderBottom='1px'\n                py='2'\n                borderColor='gray.200'\n                alignItems='center'\n                justifyContent='space-between'>\n                <Text fontSize='xl'>Items</Text>\n                <Text fontWeight='bold' fontSize='xl'>\n                  ₹{order.itemsPrice}\n                </Text>\n              </Flex>\n\n              {/* Shipping price */}\n              <Flex\n                borderBottom='1px'\n                py='2'\n                borderColor='gray.200'\n                alignItems='center'\n                justifyContent='space-between'>\n                <Text fontSize='xl'>Shipping</Text>\n                <Text fontWeight='bold' fontSize='xl'>\n                  ₹{order.shippingPrice}\n                </Text>\n              </Flex>\n\n              {/* Tax price */}\n              <Flex\n                borderBottom='1px'\n                py='2'\n                borderColor='gray.200'\n                alignItems='center'\n                justifyContent='space-between'>\n                <Text fontSize='xl'>Tax</Text>\n                <Text fontWeight='bold' fontSize='xl'>\n                  ₹{order.taxPrice}\n                </Text>\n              </Flex>\n\n              {/* Total price */}\n              <Flex py='2' alignItems='center' justifyContent='space-between'>\n                <Text fontSize='xl'>Total</Text>\n                <Text fontWeight='bold' fontSize='xl' color='green.400'>\n                  ₹{order.totalPrice}\n                </Text>\n              </Flex>\n            </Box>\n\n            {!order.isPaid && (\n              <Box>\n                {loadingPay && <Loader />}\n                {!sdkReady ? (\n                  <Loader />\n                ) : (\n                  <PayPalButton\n                    amount={order.totalPrice}\n                    onSuccess={successPaymentHandler}\n                  />\n                )}\n              </Box>\n            )}\n\n            {loadingDelivery && <Loader />}\n            {userInfo &&\n              userInfo.isAdmin &&\n              order.isPaid &&\n              !order.isDelivered && (\n                <Button\n                  type='button'\n                  colorScheme='teal'\n                  onClick={deliverHandler}>\n                  Mark as delivered\n                </Button>\n              )}\n          </Flex>\n        </Grid>\n      </Flex>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","import { useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Flex,\n  Heading,\n  Icon,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Box,\n} from '@chakra-ui/react';\nimport {\n  IoCheckmarkCircleSharp,\n  IoCloseCircleSharp,\n  IoPencilSharp,\n  IoTrashBinSharp,\n} from 'react-icons/io5';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listUsers, deleteUser } from '../actions/userActions';\n\nconst UserListScreen = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      navigate('/login');\n    }\n  }, [dispatch, userInfo, successDelete]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteUser(id));\n    }\n  };\n\n  return (\n    <>\n      <Heading as='h1' fontSize='3xl' mb='5'>\n        Users\n      </Heading>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message type='error'>{error}</Message>\n      ) : (\n        <Box bgColor='white' rounded='lg' shadow='lg' px='5' py='5'>\n          <Table variant='striped' colorScheme='gray' size='sm'>\n            <Thead>\n              <Tr>\n                <Th>ID</Th>\n                <Th>NAME</Th>\n                <Th>EMAIL</Th>\n                <Th>ADMIN</Th>\n                <Th></Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {users.map((user) => (\n                <Tr key={user._id}>\n                  <Td>{user._id}</Td>\n                  <Td>{user.name}</Td>\n                  <Td>\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\n                  </Td>\n                  <Td>\n                    {user.isAdmin ? (\n                      <Icon\n                        as={IoCheckmarkCircleSharp}\n                        color='green.600'\n                        w='8'\n                        h='8'\n                      />\n                    ) : (\n                      <Icon\n                        as={IoCloseCircleSharp}\n                        color='red.600'\n                        w='8'\n                        h='8'\n                      />\n                    )}\n                  </Td>\n                  <Td>\n                    <Flex justifyContent='flex-end' alignItems='center'>\n                      <Button\n                        mr='4'\n                        as={RouterLink}\n                        to={`/admin/user/${user._id}/edit`}\n                        colorScheme='teal'>\n                        <Icon as={IoPencilSharp} color='white' size='sm' />\n                      </Button>\n                      <Button\n                        mr='4'\n                        colorScheme='red'\n                        onClick={() => deleteHandler(user._id)}>\n                        <Icon as={IoTrashBinSharp} color='white' size='sm' />\n                      </Button>\n                    </Flex>\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </Table>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default UserListScreen;\n","import { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate, useParams } from 'react-router-dom';\nimport {\n  Button,\n  Flex,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Spacer,\n  Link,\n  Checkbox,\n} from '@chakra-ui/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\n\nconst UserEditScreen = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { id: userId } = useParams();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      navigate('/admin/userlist');\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, dispatch, userId, successUpdate, navigate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n\n  return (\n    <>\n      <Link as={RouterLink} to='/admin/userlist'>\n        Go Back\n      </Link>\n      <Flex w='full' alignItems='center' justifyContent='center' py='5'>\n        <FormContainer>\n          <Heading as='h1' mb='8' fontSize='3xl'>\n            Edit User\n          </Heading>\n\n          {loadingUpdate && <Loader />}\n          {errorUpdate && <Message type='error'>{errorUpdate}</Message>}\n\n          {loading ? (\n            <Loader />\n          ) : error ? (\n            <Message type='error'>{error}</Message>\n          ) : (\n            <form onSubmit={submitHandler}>\n              <FormControl id='name' isRequired>\n                <FormLabel>Name</FormLabel>\n                <Input\n                  type='text'\n                  placeholder='Enter full name'\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </FormControl>\n              <Spacer h='3' />\n\n              <FormControl id='email' isRequired>\n                <FormLabel>Email Address</FormLabel>\n                <Input\n                  type='text'\n                  placeholder='Enter email address'\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormControl>\n              <Spacer h='3' />\n\n              <FormControl id='isAdmin' isRequired>\n                <FormLabel>Is Admin?</FormLabel>\n                <Checkbox\n                  size='lg'\n                  colorScheme='teal'\n                  checked={isAdmin}\n                  onChange={(e) => setIsAdmin(e.target.check)}>\n                  Is Admin?\n                </Checkbox>\n              </FormControl>\n              <Spacer h='3' />\n\n              <Button\n                type='submit'\n                isLoading={loading}\n                colorScheme='teal'\n                mt='4'>\n                Update\n              </Button>\n            </form>\n          )}\n        </FormContainer>\n      </Flex>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","import { useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Flex,\n  Heading,\n  Icon,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Box,\n} from '@chakra-ui/react';\nimport { IoPencilSharp, IoTrashBinSharp, IoAdd } from 'react-icons/io5';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions';\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\n\nconst ProductListScreen = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo.isAdmin) {\n      navigate('/login');\n    }\n\n    if (successCreate) {\n      navigate(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts());\n    }\n  }, [\n    dispatch,\n    navigate,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n\n  return (\n    <>\n      <Flex mb='5' alignItems='center' justifyContent='space-between'>\n        <Heading as='h1' fontSize='3xl' mb='5'>\n          Product\n        </Heading>\n        <Button onClick={createProductHandler} colorScheme='teal'>\n          <Icon as={IoAdd} mr='2' fontSize='xl' fontWeight='bold' /> Create\n          Product\n        </Button>\n      </Flex>\n\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message type='error'>{errorDelete}</Message>}\n\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message type='error'>{errorCreate}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message type='error'>{error}</Message>\n      ) : (\n        <Box bgColor='white' rounded='lg' shadow='lg' px='5' py='5'>\n          <Table variant='striped' colorScheme='gray' size='sm'>\n            <Thead>\n              <Tr>\n                <Th>ID</Th>\n                <Th>NAME</Th>\n                <Th>PRICE</Th>\n                <Th>CATEGORY</Th>\n                <Th>BRAND</Th>\n                <Th></Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {products.map((product) => (\n                <Tr key={product._id}>\n                  <Td>{product._id}</Td>\n                  <Td>{product.name}</Td>\n                  <Td>{product.price}</Td>\n                  <Td>{product.category}</Td>\n                  <Td>{product.brand}</Td>\n                  <Td>\n                    <Flex justifyContent='flex-end' alignItems='center'>\n                      <Button\n                        mr='4'\n                        as={RouterLink}\n                        to={`/admin/product/${product._id}/edit`}\n                        colorScheme='teal'>\n                        <Icon as={IoPencilSharp} color='white' size='sm' />\n                      </Button>\n                      <Button\n                        mr='4'\n                        colorScheme='red'\n                        onClick={() => deleteHandler(product._id)}>\n                        <Icon as={IoTrashBinSharp} color='white' size='sm' />\n                      </Button>\n                    </Flex>\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </Table>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default ProductListScreen;\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Flex,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Spacer,\n  Link,\n} from '@chakra-ui/react';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n\nconst ProductEditScreen = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { id: productId } = useParams();\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [uploading, setUploading] = useState(false);\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      navigate(`/admin/productlist`);\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, navigate, productId, product, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    );\n  };\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      };\n\n      const { data } = await axios.post('/api/uploads', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (err) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  return (\n    <>\n      <Link as={RouterLink} to='/admin/productlist'>\n        Go Back\n      </Link>\n\n      <Flex w='full' alignItems='center' justifyContent='center' py='5'>\n        <FormContainer>\n          <Heading as='h1' mb='8' fontSize='3xl'>\n            Edit Product\n          </Heading>\n\n          {loadingUpdate && <Loader />}\n          {errorUpdate && <Message type='error'>{errorUpdate}</Message>}\n\n          {loading ? (\n            <Loader />\n          ) : error ? (\n            <Message type='error'>{error}</Message>\n          ) : (\n            <form onSubmit={submitHandler}>\n              {/* NAME */}\n              <FormControl id='name' isRequired>\n                <FormLabel>Name</FormLabel>\n                <Input\n                  type='text'\n                  placeholder='Enter name'\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </FormControl>\n              <Spacer h='3' />\n\n              {/* PRICE */}\n              <FormControl id='price' isRequired>\n                <FormLabel>Price</FormLabel>\n                <Input\n                  type='number'\n                  placeholder='Enter price'\n                  value={price}\n                  onChange={(e) => setPrice(e.target.value)}\n                />\n              </FormControl>\n              <Spacer h='3' />\n\n              {/* IMAGE */}\n              <FormControl id='image' isRequired>\n                <FormLabel>Image</FormLabel>\n                <Input\n                  type='text'\n                  placeholder='Enter image url'\n                  value={image}\n                  onChange={(e) => setImage(e.target.value)}\n                />\n                <Input\n                  type='file'\n                  id='image-file'\n                  onChange={uploadFileHandler}\n                />\n              </FormControl>\n              <Spacer h='3' />\n\n              {/* DESCRIPTION */}\n              <FormControl id='description' isRequired>\n                <FormLabel>Description</FormLabel>\n                <Input\n                  type='text'\n                  placeholder='Enter description'\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </FormControl>\n              <Spacer h='3' />\n\n              {/* BRAND */}\n              <FormControl id='brand' isRequired>\n                <FormLabel>Brand</FormLabel>\n                <Input\n                  type='text'\n                  placeholder='Enter brand'\n                  value={brand}\n                  onChange={(e) => setBrand(e.target.value)}\n                />\n              </FormControl>\n              <Spacer h='3' />\n\n              {/* CATEGORY */}\n              <FormControl id='category' isRequired>\n                <FormLabel>Category</FormLabel>\n                <Input\n                  type='text'\n                  placeholder='Enter category'\n                  value={category}\n                  onChange={(e) => setCategory(e.target.value)}\n                />\n              </FormControl>\n              <Spacer h='3' />\n\n              {/* COUNT IN STOCK */}\n              <FormControl id='countInStock' isRequired>\n                <FormLabel>Count In Stock</FormLabel>\n                <Input\n                  type='number'\n                  placeholder='Product in stock'\n                  value={countInStock}\n                  onChange={(e) => setCountInStock(e.target.value)}\n                />\n              </FormControl>\n              <Spacer h='3' />\n\n              <Button\n                type='submit'\n                isLoading={loading}\n                colorScheme='teal'\n                mt='4'>\n                Update\n              </Button>\n            </form>\n          )}\n        </FormContainer>\n      </Flex>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n","import { useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Flex,\n  Heading,\n  Icon,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Box,\n} from '@chakra-ui/react';\nimport {\n  IoCheckmarkCircleSharp,\n  IoCloseCircleSharp,\n  IoPencilSharp,\n  IoTrashBinSharp,\n} from 'react-icons/io5';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listOrders } from '../actions/orderActions';\n\nconst OrderListScreen = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      navigate('/login');\n    }\n  }, [dispatch, userInfo]);\n\n  return (\n    <>\n      <Heading as='h1' fontSize='3xl' mb='5'>\n        Orders\n      </Heading>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message type='error'>{error}</Message>\n      ) : (\n        <Box bgColor='white' rounded='lg' shadow='lg' px='5' py='5'>\n          <Table variant='striped' colorScheme='gray' size='sm'>\n            <Thead>\n              <Tr>\n                <Th>ID</Th>\n                <Th>USER</Th>\n                <Th>DATE</Th>\n                <Th>TOTAL PRICE</Th>\n                <Th>PAID</Th>\n                <Th>DELIVERED</Th>\n                <Th></Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {orders.map((order) => (\n                <Tr key={order._id}>\n                  <Td>{order._id}</Td>\n                  <Td>{order.user && order.user.name}</Td>\n                  <Td>{order.createdAt.substring(0, 10)}</Td>\n                  <Td>₹{order.totalPrice}</Td>\n                  <Td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <Icon\n                        as={IoCloseCircleSharp}\n                        color='red.600'\n                        w='8'\n                        h='8'\n                      />\n                    )}\n                  </Td>\n                  <Td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <Icon\n                        as={IoCloseCircleSharp}\n                        color='red.600'\n                        w='8'\n                        h='8'\n                      />\n                    )}\n                  </Td>\n                  <Td>\n                    <Flex justifyContent='flex-end' alignItems='center'>\n                      <Button\n                        mr='4'\n                        as={RouterLink}\n                        to={`/order/${order._id}`}\n                        colorScheme='teal'>\n                        Details\n                      </Button>\n                    </Flex>\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </Table>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default OrderListScreen;\n","import { Flex } from '@chakra-ui/react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Flex\n        as='main'\n        direction='column'\n        mt='72px'\n        minH='xl'\n        py='6'\n        px='6'\n        bgColor='gray.200'>\n        <Routes>\n          <Route path='/' element={<HomeScreen />} />\n          <Route path='/product/:id' element={<ProductScreen />} />\n          <Route path='/cart/:id' element={<CartScreen />} />\n          <Route path='/cart' element={<CartScreen />} />\n          <Route path='/login' element={<LoginScreen />} />\n          <Route path='/register' element={<RegisterScreen />} />\n          <Route path='/profile' element={<ProfileScreen />} />\n          <Route path='/shipping' element={<ShippingScreen />} />\n          <Route path='/payment' element={<PaymentScreen />} />\n          <Route path='/placeorder' element={<PlaceOrderScreen />} />\n          <Route path='/order/:id' element={<OrderScreen />} />\n          <Route path='/admin/userlist' element={<UserListScreen />} />\n          <Route path='/admin/user/:id/edit' element={<UserEditScreen />} />\n          <Route path='/admin/productlist' element={<ProductListScreen />} />\n          <Route\n            path='/admin/product/:id/edit'\n            element={<ProductEditScreen />}\n          />\n          <Route path='/admin/orderlist' element={<OrderListScreen />} />\n        </Routes>\n      </Flex>\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport store from './store';\nimport App from './App';\n\nrender(\n  <Provider store={store}>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}